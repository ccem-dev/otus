!function(){"use strict";angular.module("otusjs.otus.installer",[])}(),function(){"use strict";function i(i,t,e,o,n,a,s){function l(){$=t.getOtusInstallerResource()}function r(i){o.isLoading=!0,delete i.userPasswordConfirm,$.config(i,function(i){i.data?C():u(i),o.isLoading=!1})}function c(i){e.setHostname(i);var t=e.getInstallerResource();t.ready(function(i){i.data||d()})}function u(i){switch(i.STATUS){case"CONFLICT":f();break;case"PRECONDITION_FAILED":m();break;default:g()}}function f(){o.initialConfigForm.email.$setValidity("email",!1),o.initialConfigForm.$setValidity("email",!1)}function m(){o.initialConfigForm.emailSenderEmail.$setValidity("emailService",!1),o.initialConfigForm.$setValidity("emailService",!1)}function d(){o.initialConfigForm.urlProject.$setValidity("domainAccess",!1),o.initialConfigForm.$setValidity("domainAccess",!1)}function g(){S(y)}function p(){o.initialConfigForm.emailSenderEmail.$setValidity("emailService",!0),o.initialConfigForm.$setValidity("emailService",!0)}function v(){o.initialConfigForm.urlProject.$setValidity("domainAccess",!0),o.initialConfigForm.$setValidity("domainAccess",!0)}function C(){var i=s.alert().title("Informação").content(j).ok("ok");s.show(i)["finally"](function(){})}function S(i){n.show(n.simple().textContent(i))}var $,y="Erro ao adicionar novas configurações. Contate a equipe de desenvolvimento",j="Suas configurações foram realizadas com sucesso! Você vai ser redirecionado para a tela de login.",I=this;I.register=r,I.validateDomain=c,I.resetValidationEmail=p,I.resetValidationDomain=v,l()}angular.module("otusjs.otus.installer").controller("otusjs.otus.installer.InitialConfigController",i),i.$inject=["otusjs.application.state.ApplicationStateService","OtusRestResourceService","RestResourceService","$scope","$mdToast","$q","$mdDialog"]}(),function(){"use strict";function i(i){function t(){return o}function e(i,t){i.ready(function(i){t.activateInstaller()})}var o=this;o.$get=[t],o.state={name:i.INSTALLER,url:"/"+i.INSTALLER,templateUrl:"app/module/installer/component/initial-config.html",controller:"otusjs.otus.installer.InitialConfigController as controller",resolve:{onlyOneConfiguration:e}},e.$inject=["otusjs.otus.interoperability.rest.otusApi.InstallerProxyService","otusjs.application.state.ApplicationStateService"]}angular.module("otusjs.otus.application.state").provider("otusjs.otus.application.state.InstallerState",i),i.$inject=["STATE"]}();